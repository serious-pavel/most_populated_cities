name: CI/CD
on:
  push:
    branches:
      - test
      - main

env:
  IMAGE_URL_SHA: ${{ vars.PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mpc/mpc-${{ vars.ENV }}:${{ github.sha }}
  IMAGE_URL_LATEST: ${{ vars.PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mpc/mpc-${{ vars.ENV }}:latest

jobs:
  build:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Display the ENVIRONMENT
        run: |
          echo "ENV is ${{ vars.ENV }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy GitHub secrets to .env
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DEBUG=${{ vars.DEBUG }}" >> .env

      - name: Authenticate Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ vars.PROJECT_REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_URL_LATEST }} -t ${{ env.IMAGE_URL_SHA }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_URL_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          image_url: ${{ env.IMAGE_URL_LATEST }}